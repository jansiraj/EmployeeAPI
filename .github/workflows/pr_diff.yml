name: Send PR and Check for "hello msg"

on:
  pull_request:
    branches: 
      - main

jobs:
  send_pr_and_check_hello:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install axios
        run: npm install axios

      - name: Get PR Diff
        id: get_pr_diff
        run: |
          echo "Fetching PR diff..."
          curl -s "${{ github.event.pull_request.diff_url }}" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" > pr_diff.txt
          echo "PR diff content fetched."

      - name: Perform POST Request to Flask API
        id: post_api
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const axios = require('axios');
            const apiUrl = 'https://4511-2001-df4-2a00-6-413b-9dfc-955e-26b0.ngrok-free.app/workflows';
            const diffUrl = '${{ github.event.pull_request.diff_url }}';
            const number = '${{ github.event.pull_request.number }}';
            const repo = '${{ github.event.repository.name }}';
            const owner = '${{ github.event.pull_request.user.login }}';
            const githubToken = '${{ secrets.GITHUB_TOKEN }}';
            const headSha = '${{ github.event.pull_request.head.sha }}';

            const requestData = {
              diff_url: diffUrl,
              number: number,
              repo: repo,
              owner: owner,
              github_token: githubToken,
              head_sha: headSha
            };

            try {
              const response = await axios.post(apiUrl, requestData);
              const data = response.data;

              // Replace with your own logic to handle the response
              if (data.status === 'error') {
                core.setFailed(`API Error: ${data.message}`);
              } else if (data.status === 'warning') {
                console.log(`Warning: ${data.message}`);
                core.warning(`Warning: ${data.message}`);
                core.setFailed(`Warning: ${data.message}`);
              } else {
                console.log('API response is OK.');
              }
            } catch (error) {
              core.setFailed(`API request failed: ${error.message}`);
            }
