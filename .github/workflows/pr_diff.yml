name: Send PR and Check for "hello msg"

on:
  pull_request:
    branches: 
      - main

jobs:
  send_pr_and_check_hello:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR Diff
        id: get_pr_diff
        run: |
          echo "Fetching PR diff..."
          curl -s "${{ github.event.pull_request.diff_url }}" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" > pr_diff.txt
          echo "PR diff content fetched."

      - name: Send PR information to FlaskAPI
        id: send_pr_info
        run: |
          echo "Sending PR information to FlaskAPI..."
          API_URL="https://chubby-crabs-try.loca.lt/workflows"
          PR_DETAILS=$(echo "{\"diff_url\": \"${{ github.event.pull_request.diff_url }}\", \"number\": \"${{ github.event.pull_request.number }}\", \"repo\": \"${{ github.event.repository.name }}\", \"owner\": \"${{ github.event.pull_request.user.login }}\", \"github_token\": \"${{ secrets.GITHUB_TOKEN }}\", \"head_sha\": \"${{ github.event.pull_request.head.sha }}\"}")
          RESPONSE=$(curl -X POST -H "Content-Type: application/json" -d "$PR_DETAILS" "$API_URL")
          echo "API response: $RESPONSE"
          echo "$RESPONSE" > response.json

      - name: Parse API response
        id: parse_response
        run: |
          echo "Parsing API response..."
          CONCLUSION=$(jq -r '.conclusion' response.json)
          echo "CONCLUSION=$CONCLUSION" >> $GITHUB_ENV

      - name: Print conclusion
        run: echo "The conclusion is ${{ env.CONCLUSION }}"

      - name: Raise warning if action required
        if: ${{ env.CONCLUSION == 'action_required' }}
        uses: actions/github-script@v6
        with:
          node-version: '14'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.sha,
              name: "my-check-name",
              status: "completed",
              started_at: new Date().toISOString(),
              completed_at: new Date().toISOString(),
              conclusion: "failure",
              output: {
                title: "my *check* title",
                summary: "my *check* summary",
                text: "my *check* text",
              }
            })
      
