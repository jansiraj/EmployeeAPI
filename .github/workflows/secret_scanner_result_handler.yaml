name: Secret Scanner Workflow
on:
  repository_dispatch:
    types: [scan_completed]

jobs:
  scan_completed_job:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run some task
      run: |
        echo "Scan completed for audit ID: ${{ github.event.client_payload.audit_id }}"
    
    - name: Check for secrets
      id: check_secrets
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const axios = require('axios');
          const scanAuditId = '${{ github.event.client_payload.audit_id }}';
          const satToken = '${{ github.event.client_payload.sat_token }}';
          const apiUrl = 'https://d5be-49-206-97-141.ngrok-free.app/api/v1/xgg/check_secrets/${scanAuditId}';

          try {
            const response = await axios.post(apiUrl, requestData, {
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${satToken}`
              }
            });
            const data = response.data;

            // Handle API response
            if (data.status === 'error') {
              core.setFailed(`API Error: ${data.message}`);
            } {else if (data.status == 'success'){
              core.setOutput('message', 'Diff data sent to the queue successfully');
              }
            else if (data.status === 'warning') {
              if (Array.isArray(data.warning_messages)) {
                // Iterate over the list and issue warnings
                data.warning_messages.forEach(message => {
                  core.warning(`Warning: ${message}`);
                });
              } else {
                core.warning('Unknown warning format');
              }
            } else {
              console.log('API response is OK.');
            }
          } catch (error) {
            core.setFailed(`API request failed: ${error.message}`);
          }

    
